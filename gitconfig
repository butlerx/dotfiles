# pets: package=github-cli
# pets: package=git
# pets: symlink=~/.gitconfig

[user]
  name = Cian Butler
  email = butlerx@notthe.cloud
  signingkey = C61F9E960956795F3DB41361B37CA765BAA89170
[includeIf "gitdir:~/projects/evervault/"]
  path = ~/projects/evervault/.gitconfig
[includeIf "gitdir:~/projects/cian-ev/"]
  path = ~/projects/cian-ev/.gitconfig
[includeIf "gitdir:~/projects/evervault-test/"]
  path = ~/projects/evervault/.gitconfig
[push]
  default = simple
[github]
  user = butlerx
[alias]
  yolo = "!git commit -m \"$(curl -s https://whatthecommit.com/index.txt)\""
  lol = log --oneline --graph --decorate --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
  today = log --since=00:00:00 --all --no-merges --oneline --author=butlerx@notthe.cloud
  recap = log --all --oneline --no-merges --author=butlerx@notthe.cloud
  overview = log --all --oneline --no-merges
  recent = for-each-ref --count=10 --sort=-committerdate refs/heads/ --format="%(refname:short)"
  grpah = log --graph --all --decorate --stat --date=iso
  changelog =  log --pretty=tformat:'* %ad %an <%ae> %d\n - %s' --date=format:'%a %b %d %Y'
  amend = commit --amend --no-edit
  undo = reset HEAD~1 --mixed
  clean-branch = "!git branch --merged | grep -E -v \"(^\\*|master|dev|develop|main)\" | xargs git branch -d"
  clean-merged = "!git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D"
  a = add
  ap = add -p
  c = commit --verbose
  ca = commit -a --verbose
  cm = commit -m
  cam = commit -a -m
  m = commit --amend --verbose

  d = diff
  ds = diff --stat
  dc = diff --cached

  s = status -s
  co = checkout
  cob = checkout -b
  # list branches sorted by last modified
  b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"
  # list aliases
  la = "!git config -l | grep alias | cut -c 7-"
  up = "!git fetch origin && git rebase origin/master"
  raf = remote add fork
  rao = remote add origin
  ac = "!git add . && git commit -am"
  pushitgood = push -u origin --all
  fuckpush = push -u fork --all
  forkpush = push -u fork
  forcepush = push --force
  cp = cherry-pick
  st = status -s
  cl = clone
  ec = config --global -e

  # for github remotes
  pr  = "!f() { git fetch -fu ${2:-$(git remote |grep ^upstream || echo origin)} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
  pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
  hub = "!gh"
  # for bitbucket/stash remotes
  spr  = "!f() { git fetch -fu ${2:-$(git remote |grep ^upstream || echo origin)} refs/pull-requests/$1/from:pr/$1 && git checkout pr/$1; }; f"
  ignore = "!gi() { curl -sL https://www.gitignore.io/api/$@ ;}; gi"
[core]
  autocrlf = input
[fetch]
  prune = true
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  required = true
  process = git-lfs filter-process
[commit]
  gpgsign = true
[gpg]
  program = gpg2
[pull]
  rebase = true
[init]
  defaultBranch = main
[rerere]
  enabled = 1
[credential]
	helper = store
